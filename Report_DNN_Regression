  When developing my network I also needed to learn the API and test differing strategies. When looking at the assignment I noticed it was asking us to do Gaussian network but I never found anything in Keras that used Guassians.  So I decided to check out a couple tutorials on Keras and compiling regression neural networks.  As I checked around different tutorials I found a basic regression tutorial that was used to predict MPG using different stats for a car engine.  I figured this would be a great example to follow as it used many different regression networks and I would have more experience with different models this way. 

	My final network ended up being a Regression Dense Neural Network with multiple inputs.  I used 4 layers.  The first layer was a normalization layer with 17 nodes, a second layer with 64 nodes, a third layer with another 64 nodes and a last output layer of 1.  I trained 3 networks to predict each score for Math, Writing, and Reading separately.  I figured that this would allow us to find the exceptions where certain groups where the scores can very from each other wildly.  As I look at the results I am not so sure this was the case.

	All of the networks seemed for have a fairly close to accurate scoring prediction.  No model we ran had a mean absolute error of more than 11.9.  The predictability of the network is at most an average difference from the actual score is 12 percent.

	I believe more testing would be required to improve this network.  As we have stated in class AI is more like alchemy at this point.  We know it works if we do a specific action, but we have to observe it before we know it to be true.  In the same sense I would need to try different setups to create a more efficient network.
